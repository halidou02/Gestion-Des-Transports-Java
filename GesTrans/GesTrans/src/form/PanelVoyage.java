/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import classe.Car;
import classe.Chauffeur;
import classe.Voyage;
import dao.CarDAO;
import dao.ChauffeurDAO;
import dao.Connectdb;
import dao.VoyageDAO;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author halid
 */
public class PanelVoyage extends javax.swing.JPanel {

    boolean modifier;
    String statut = "Indisponible";

    /**
     * Creates new form PanelVoyage
     */
    public PanelVoyage() {
        initComponents();
        liste_etudiant();
        combo_car();
        combo_chauffeur();
        mouse();
        Statut_car();
        Statut_chauffeur();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VoyageAjouter = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txt_source1 = new combo_suggestion.ComboBoxSuggestion();
        txt_destination1 = new combo_suggestion.ComboBoxSuggestion();
        txt_car = new combo_suggestion.ComboBoxSuggestion();
        txt_nb_place = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txt_chauf = new combo_suggestion.ComboBoxSuggestion();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        btn_enregistrer45 = new com.raven.swing.Button();
        btn_supprimer45 = new com.raven.swing.Button();
        txt_depart = new com.toedter.calendar.JDateChooser();
        txt_arrive = new com.toedter.calendar.JDateChooser();
        jLabel49 = new javax.swing.JLabel();
        txt_statut = new javax.swing.JLabel();
        txt_marque1 = new javax.swing.JLabel();
        txt_nomchauf = new textfield_suggestion.TextFieldSuggestion();
        jLabel43 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tb_voyage = new rojeru_san.complementos.RSTableMetro();
        btn_modifier44 = new com.raven.swing.Button();
        btn_imprimer44 = new com.raven.swing.Button();
        btn_supprimer44 = new com.raven.swing.Button();
        btn_enregistrer44 = new com.raven.swing.Button();
        jLabel47 = new javax.swing.JLabel();
        jComboBox1 = new combo_suggestion.ComboBoxSuggestion();

        VoyageAjouter.setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fiche Voyage");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, 50));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_source1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bamako", "Gao", "Toumbouctou", "Kidal", "Segou", "Koutiala", "Sikasso", "Mopti", "kayes" }));
        txt_source1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txt_source1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_source1ActionPerformed(evt);
            }
        });
        jPanel2.add(txt_source1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 460, 40));

        txt_destination1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bamako", "Gao", "Toumbouctou", "Kidal", "Segou", "Koutiala", "Sikasso", "Mopti", "kayes" }));
        txt_destination1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jPanel2.add(txt_destination1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 460, 40));

        txt_car.setEditable(false);
        txt_car.setToolTipText("");
        txt_car.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txt_car.setName(""); // NOI18N
        txt_car.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_carActionPerformed(evt);
            }
        });
        jPanel2.add(txt_car, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 320, 40));

        txt_nb_place.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jPanel2.add(txt_nb_place, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 90, 30));

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel37.setText("Destination");
        jPanel2.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel41.setText("Source");
        jPanel2.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        jLabel42.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel42.setText("Car");
        jPanel2.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        jLabel48.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel48.setText("Marque :");
        jPanel2.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, -1, 30));

        txt_chauf.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txt_chauf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_chaufActionPerformed(evt);
            }
        });
        jPanel2.add(txt_chauf, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 120, 40));

        jLabel38.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel38.setText("Depart");
        jPanel2.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, -1, 30));

        jLabel39.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel39.setText("Arrivee");
        jPanel2.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 530, -1, 30));

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel40.setText("Nom");
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, -1, 30));

        btn_enregistrer45.setBackground(new java.awt.Color(51, 51, 255));
        btn_enregistrer45.setForeground(new java.awt.Color(255, 255, 255));
        btn_enregistrer45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/valid-vector-icon-png_267488.png"))); // NOI18N
        btn_enregistrer45.setText("  Terminer");
        btn_enregistrer45.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        btn_enregistrer45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enregistrer45ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_enregistrer45, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 630, 150, 45));

        btn_supprimer45.setBackground(new java.awt.Color(255, 51, 51));
        btn_supprimer45.setForeground(new java.awt.Color(255, 255, 255));
        btn_supprimer45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/anull-vector-icon-png_267488.png"))); // NOI18N
        btn_supprimer45.setText("  Annuler");
        btn_supprimer45.setToolTipText("");
        btn_supprimer45.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        btn_supprimer45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_supprimer45ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_supprimer45, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 630, 150, 45));

        txt_depart.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jPanel2.add(txt_depart, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, 460, 40));

        txt_arrive.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jPanel2.add(txt_arrive, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 560, 460, 40));

        jLabel49.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel49.setText("Taille Car :");
        jPanel2.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, -1, 30));

        txt_statut.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        txt_statut.setForeground(new java.awt.Color(255, 0, 51));
        jPanel2.add(txt_statut, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 130, 40));

        txt_marque1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jPanel2.add(txt_marque1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 120, 30));

        txt_nomchauf.setEnabled(false);
        txt_nomchauf.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        txt_nomchauf.setRound(0);
        txt_nomchauf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nomchaufActionPerformed(evt);
            }
        });
        jPanel2.add(txt_nomchauf, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 320, 40));

        jLabel43.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 20)); // NOI18N
        jLabel43.setText("Chauffeur");
        jPanel2.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, 30));

        javax.swing.GroupLayout VoyageAjouterLayout = new javax.swing.GroupLayout(VoyageAjouter.getContentPane());
        VoyageAjouter.getContentPane().setLayout(VoyageAjouterLayout);
        VoyageAjouterLayout.setHorizontalGroup(
            VoyageAjouterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        VoyageAjouterLayout.setVerticalGroup(
            VoyageAjouterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VoyageAjouterLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setPreferredSize(new java.awt.Dimension(1520, 942));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tb_voyage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Source", "Destination", "Car", "Chauffeur", "Depart", "Arrive"
            }
        ));
        tb_voyage.setColorBackgoundHead(new java.awt.Color(153, 153, 255));
        tb_voyage.setColorBordeFilas(new java.awt.Color(153, 153, 255));
        tb_voyage.setColorBordeHead(new java.awt.Color(153, 153, 255));
        tb_voyage.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tb_voyage.setColorFilasForeground1(new java.awt.Color(153, 153, 255));
        tb_voyage.setColorFilasForeground2(new java.awt.Color(153, 153, 255));
        tb_voyage.setColorSelBackgound(new java.awt.Color(255, 51, 51));
        tb_voyage.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        tb_voyage.setFuenteFilas(new java.awt.Font("Yu Gothic UI Semibold", 0, 16)); // NOI18N
        tb_voyage.setFuenteFilasSelect(new java.awt.Font("Yu Gothic UI", 1, 16)); // NOI18N
        tb_voyage.setFuenteHead(new java.awt.Font("Yu Gothic UI Semibold", 1, 16)); // NOI18N
        tb_voyage.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tb_voyage.setRowHeight(40);
        tb_voyage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_voyageMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tb_voyage);

        jPanel18.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 1160, 710));

        btn_modifier44.setBackground(new java.awt.Color(255, 204, 51));
        btn_modifier44.setForeground(new java.awt.Color(255, 255, 255));
        btn_modifier44.setText("Modifier");
        btn_modifier44.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btn_modifier44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifier44ActionPerformed(evt);
            }
        });
        jPanel18.add(btn_modifier44, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 150, 45));

        btn_imprimer44.setBackground(new java.awt.Color(51, 204, 0));
        btn_imprimer44.setForeground(new java.awt.Color(255, 255, 255));
        btn_imprimer44.setText("Imprimer");
        btn_imprimer44.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btn_imprimer44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imprimer44ActionPerformed(evt);
            }
        });
        jPanel18.add(btn_imprimer44, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, 150, 45));

        btn_supprimer44.setBackground(new java.awt.Color(255, 51, 51));
        btn_supprimer44.setForeground(new java.awt.Color(255, 255, 255));
        btn_supprimer44.setText("Supprimer");
        btn_supprimer44.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btn_supprimer44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_supprimer44ActionPerformed(evt);
            }
        });
        jPanel18.add(btn_supprimer44, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 20, 150, 45));

        btn_enregistrer44.setBackground(new java.awt.Color(51, 51, 255));
        btn_enregistrer44.setForeground(new java.awt.Color(255, 255, 255));
        btn_enregistrer44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/add button.png"))); // NOI18N
        btn_enregistrer44.setText(" Programmer");
        btn_enregistrer44.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        btn_enregistrer44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enregistrer44ActionPerformed(evt);
            }
        });
        jPanel18.add(btn_enregistrer44, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 180, 45));

        jLabel47.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 36)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(0, 51, 255));
        jLabel47.setText("Liste des Voyages");
        jPanel18.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tout", "En cours", "En attente", "Terminer" }));
        jComboBox1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel18.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 100, 140, 40));

        add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1560, 950));
    }// </editor-fold>//GEN-END:initComponents

    private void tb_voyageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_voyageMouseClicked
        /* int index = tb_voyage.getSelectedRow();
        if (index!=-1){
            int id = (int)tb_voyage.getValueAt(index,0);
            VoyageDAO edao = new VoyageDAO();
            Voyage etu = edao.recherche(id);
            txt_source1.setSelectedItem(etu.getSource()+"");
            txt_destination1.setSelectedItem(etu.getDestination()+"");
            txt_car.setSelectedItem(etu.getIdcar()+"");
            txt_nb_place.setText(etu.getNb_place()+"");
            txt_chauf.setSelectedItem(etu.getNom_ch()+"");
            txt_depart.setText(etu.getDepart());
            txt_arrive.setText(etu.getArrive());
        }*/
    }//GEN-LAST:event_tb_voyageMouseClicked

    private void btn_modifier44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifier44ActionPerformed

        int index = tb_voyage.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez selectionnez un client");
        } else {

            VoyageAjouter.setVisible(true);
            modifier = true;
            VoyageAjouter.pack();
            VoyageAjouter.setLocationRelativeTo(null);
            VoyageAjouter.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

            mouse();
        }
    }//GEN-LAST:event_btn_modifier44ActionPerformed

    private void btn_imprimer44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imprimer44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_imprimer44ActionPerformed

    private void btn_supprimer44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_supprimer44ActionPerformed
        int index = tb_voyage.getSelectedRow();
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Veuillez selectionnez une ligne");
        } else {
            int id = (int) tb_voyage.getValueAt(index, 0);
            VoyageDAO edao = new VoyageDAO();
            edao.supprimer(id);
            viderVoyage();
            liste_etudiant();

        }        // TODO add your handling code here:
    }//GEN-LAST:event_btn_supprimer44ActionPerformed
    private void liste_etudiant() {
        Statut_car();
        Statut_chauffeur();
        VoyageDAO edao = new VoyageDAO();
        List<Voyage> voyage = edao.liste();
        for (int i = 0; i < voyage.size(); i++) {
            ((DefaultTableModel) tb_voyage.getModel()).addRow(new Object[]{
                voyage.get(i).getIdvoy(),
                voyage.get(i).getSource(),
                voyage.get(i).getDestination(),
                voyage.get(i).getIdcar(),
                voyage.get(i).getIdchauf(),
                voyage.get(i).getDepart(),
                voyage.get(i).getArrive(),});
        }

    }

    private void viderVoyage() {

        DefaultTableModel model = (DefaultTableModel) tb_voyage.getModel();
        int n = model.getRowCount();
        for (int i = n - 1; i >= 0; --i) {
            model.removeRow(i);
        }
    }

    private void viderVoyagetxt() {

        txt_depart.setDate(null);
        txt_arrive.setDate(null);
    }
    private void btn_enregistrer44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enregistrer44ActionPerformed

        VoyageAjouter.setVisible(true);
        modifier = false;
        VoyageAjouter.pack();
        VoyageAjouter.setLocationRelativeTo(null);
        VoyageAjouter.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        viderVoyagetxt();


    }//GEN-LAST:event_btn_enregistrer44ActionPerformed

    private void txt_source1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_source1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_source1ActionPerformed

    private void txt_carActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_carActionPerformed
        CarDAO cdao = new CarDAO();
        List<Car> car = cdao.liste();

        int j = txt_car.getSelectedIndex();
        txt_nb_place.setText(car.get(j).getNb_place() + "");
        txt_statut.setText(car.get(j).getStatut() + "");
        txt_marque1.setText(car.get(j).getMarque() + "");

    }//GEN-LAST:event_txt_carActionPerformed

    private void btn_enregistrer45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enregistrer45ActionPerformed
        VoyageDAO vdao = new VoyageDAO();
        CarDAO cdao = new CarDAO();
        List<Car> car = cdao.liste();
        int j = txt_car.getSelectedIndex();
//List <Voyage> voyage = vdao.liste();
        ArrayList<Voyage> vdaoo = new ArrayList<>();
        boolean existe = false;
        String source = txt_source1.getSelectedItem().toString();
        String destination = txt_destination1.getSelectedItem().toString();
        String idcar = txt_car.getSelectedItem().toString();

        String idchauf = txt_chauf.getSelectedItem().toString();
        Date depart = txt_depart.getDate();
        Date arrive = txt_arrive.getDate();

        for (int i = 0; i < vdaoo.size(); i++) {
            if (depart.after(vdaoo.get(i).getDepart()) && arrive.before(vdaoo.get(i).getArrive())) {
                existe = true;

            } else {
                existe = false;
            }
        }
        Date today = new Date();
        today.setHours(0);
        today.setMinutes(0);
        today.setSeconds(0);
        if (source.equals("") || destination.equals("") || idcar.equals("") || idchauf.equals("") || depart == (null) || arrive == (null)) {
            JOptionPane.showMessageDialog(this, "Veuillez renseigner tous les champs ");
        } else {

            if (depart.after(arrive)) {
                JOptionPane.showMessageDialog(this, "Impossible! la date de depart ne peut pas être après la date de fin.");
            } else {
                if (depart.compareTo(today) < 0) {
                    JOptionPane.showMessageDialog(this, "Impossible! on peut pas réserver à une date qui est avant aujourd'hui");
                } else {
                    if (existe) {
                        JOptionPane.showMessageDialog(this, "Désole, une reservation est prevue pour cette date.\n Essayez avec une autre date ou avec une autre chambre");
                    } else {
                        if (txt_source1.getSelectedItem() == txt_destination1.getSelectedItem()) {
                            JOptionPane.showMessageDialog(this, "Ce voyage ne peut pas avoir la meme source et la meme destination");
                        } else if (modifier == false) {
                            if (car.get(j).getStatut().equals("Indisponible") || car.get(j).getStatut().equals("Reserver")) {
                                JOptionPane.showMessageDialog(this, "Le car selectioner est indisponible pour le moment");

                            } else {
                                Voyage vt = new Voyage(source, destination, Integer.parseInt(idcar), Integer.parseInt(idchauf), depart, arrive);
                                vdao.inserer(vt);
                                viderVoyage();
                                liste_etudiant();
                                Statut_car();
                                Statut_chauffeur();
                                VoyageAjouter.setVisible(false);
                            }
                        } else if (modifier == true) {
                            if (car.get(j).getStatut().equals("Indisponible") || car.get(j).getStatut().equals("Reserver")) {
                                JOptionPane.showMessageDialog(this, "Le car selectioner est indisponible pour le moment");

                            } else if (txt_source1.getSelectedItem() == txt_destination1.getSelectedItem()) {
                                JOptionPane.showMessageDialog(this, "Ce voyage ne peut pas avoir la meme source et la meme destination");
                            } else {
                                int index = tb_voyage.getSelectedRow();
                                int id = (int) tb_voyage.getValueAt(index, 0);
                                Voyage vt = new Voyage(source, destination, Integer.parseInt(idcar), Integer.parseInt(idchauf), depart, arrive);
                                vdao.modifier(vt, id);
                                viderVoyage();
                                liste_etudiant();
                                Statut_car();
                                Statut_chauffeur();
                                VoyageAjouter.setVisible(false);

                            }
                        }
                    }
                }

            }
        }

        //VoyageAjouter.dispose();
    }//GEN-LAST:event_btn_enregistrer45ActionPerformed
    private void combo_car() {
        CarDAO cdao = new CarDAO();
        List<Car> car = cdao.liste();

        for (int i = 0; i < car.size(); i++) {

            txt_car.addItem(car.get(i).getIdcar() + "");

        }

    }

    private void combo_chauffeur() {
        ChauffeurDAO cdao = new ChauffeurDAO();
        List<Chauffeur> chauffeur = cdao.liste();

        for (int i = 0; i < chauffeur.size(); i++) {
            txt_chauf.addItem(chauffeur.get(i).getIdchauf() + "");
        }

    }
    private void btn_supprimer45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_supprimer45ActionPerformed
        VoyageAjouter.dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_btn_supprimer45ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        listeChoix();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void txt_nomchaufActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nomchaufActionPerformed
        txt_nomchauf.setEditable(false);
        txt_nomchauf.setEnabled(false);
    }//GEN-LAST:event_txt_nomchaufActionPerformed

    private void txt_chaufActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_chaufActionPerformed
        ChauffeurDAO chdao = new ChauffeurDAO();
        List<Chauffeur> chauffeur = chdao.liste();

        int j = txt_chauf.getSelectedIndex();
        txt_nomchauf.setText(chauffeur.get(j).getNom() + "");

    }//GEN-LAST:event_txt_chaufActionPerformed
    private void mouse() {
        int index = tb_voyage.getSelectedRow();
        if (index != -1) {
            int id = (int) tb_voyage.getValueAt(index, 0);
            VoyageDAO edao = new VoyageDAO();
            Voyage etu = edao.recherche(id);
            txt_source1.setSelectedItem(etu.getSource() + "");
            txt_destination1.setSelectedItem(etu.getDestination() + "");
            txt_car.setSelectedItem(etu.getIdcar() + "");
            txt_chauf.setSelectedItem(etu.getIdchauf() + "");
            txt_depart.setDate(etu.getDepart());
            txt_arrive.setDate(etu.getArrive());

        }
    }

    public void listeChoix() {
        String type = jComboBox1.getSelectedItem().toString();
        VoyageDAO vdao = new VoyageDAO();
        List<Voyage> voyage = vdao.liste();
        Date today = new Date();
        today.setHours(0);
        today.setMinutes(0);
        today.setSeconds(0);
        if (type.equals("Tout")) {
            viderVoyage();
            liste_etudiant();
        } else if (type.equals("En attente")) {
            viderVoyage();
            for (int i = 0; i < voyage.size(); i++) {

                //  Voyage voy=vdao.recherche(voyage.get(i).getDepart());
                Date depart = voyage.get(i).getDepart();
                Date arrive = voyage.get(i).getArrive();
                if (depart.compareTo(today) > 0) {
                    ((DefaultTableModel) tb_voyage.getModel()).addRow(new Object[]{
                        voyage.get(i).getIdvoy(),
                        voyage.get(i).getSource(),
                        voyage.get(i).getDestination(),
                        voyage.get(i).getIdcar(),
                        voyage.get(i).getIdchauf(),
                        voyage.get(i).getDepart(),
                        voyage.get(i).getArrive()
                    });

                }
            }
        } else if (type.equals("En cours")) {
            viderVoyage();
            for (int i = 0; i < voyage.size(); i++) {

                //Voyage voy=vdao.recherche(voyage.get(i).getDepart());
                Date depart = voyage.get(i).getDepart();
                Date arrive = voyage.get(i).getArrive();

                if (depart.compareTo(today) < 0 && arrive.compareTo(today) > 0) {
                    ((DefaultTableModel) tb_voyage.getModel()).addRow(new Object[]{
                        voyage.get(i).getIdvoy(),
                        voyage.get(i).getSource(),
                        voyage.get(i).getDestination(),
                        voyage.get(i).getIdcar(),
                        voyage.get(i).getIdchauf(),
                        voyage.get(i).getDepart(),
                        voyage.get(i).getArrive()
                    });

                }
            }
        } else if (type.equals("Terminer")) {
            viderVoyage();
            for (int i = 0; i < voyage.size(); i++) {

                //  Voyage voy=vdao.recherche(voyage.get(i).getDepart());
                Date depart = voyage.get(i).getDepart();
                Date arrive = voyage.get(i).getArrive();
                if (arrive.compareTo(today) < 0) {
                    ((DefaultTableModel) tb_voyage.getModel()).addRow(new Object[]{
                        voyage.get(i).getIdvoy(),
                        voyage.get(i).getSource(),
                        voyage.get(i).getDestination(),
                        voyage.get(i).getIdcar(),
                        voyage.get(i).getIdchauf(),
                        voyage.get(i).getDepart(),
                        voyage.get(i).getArrive()
                    });

                }
            }
        }
    }

    public void Statut_car() {
        VoyageDAO vdao = new VoyageDAO();
        List<Voyage> voyage = vdao.liste();
        Date today = new Date();
        today.setHours(0);
        today.setMinutes(0);
        today.setSeconds(0);
        for (int i = 0; i < voyage.size(); i++) {

            //Voyage voy=vdao.recherche(voyage.get(i).getDepart());
            Date depart = voyage.get(i).getDepart();
            Date arrive = voyage.get(i).getArrive();

            if (depart.compareTo(today) < 0 && arrive.compareTo(today) > 0) {

                try {
                    Connection con = Connectdb.getInstance();
                    String sql = "UPDATE car INNER JOIN voyage ON car.idcar = voyage.idcar SET car.statut='Indisponible' WHERE voyage.depart < DATE( NOW() ) and voyage.arrive >DATE( NOW() );";
                    //String sql = "update issue_book_details set status = ? where student_id = ? and book_id = ? and status = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    int rowCount = pst.executeUpdate();
                } catch (SQLException e) {
                }
            } else if (arrive.compareTo(today) < 0) {
                try {
                    Connection con = Connectdb.getInstance();
                    String sql = "UPDATE car INNER JOIN voyage ON car.idcar = voyage.idcar SET car.statut='Disponible' WHERE  voyage.arrive <DATE( NOW() );";
                    //String sql = "update issue_book_details set status = ? where student_id = ? and book_id = ? and status = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    int rowCount = pst.executeUpdate();
                } catch (SQLException e) {
                }
            } else if (depart.compareTo(today) > 0) {
                try {
                    Connection con = Connectdb.getInstance();
                    String sql = "UPDATE car INNER JOIN voyage ON car.idcar = voyage.idcar SET car.statut='Reserver' WHERE  voyage.depart >DATE( NOW() );";
                    //String sql = "update issue_book_details set status = ? where student_id = ? and book_id = ? and status = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    int rowCount = pst.executeUpdate();
                } catch (SQLException e) {
                }
            }
        }

    }

    public void Statut_chauffeur() {
        VoyageDAO vdao = new VoyageDAO();
        List<Voyage> voyage = vdao.liste();
        Date today = new Date();
        today.setHours(0);
        today.setMinutes(0);
        today.setSeconds(0);
        for (int i = 0; i < voyage.size(); i++) {

            //Voyage voy=vdao.recherche(voyage.get(i).getDepart());
            Date depart = voyage.get(i).getDepart();
            Date arrive = voyage.get(i).getArrive();

            if (depart.compareTo(today) < 0 && arrive.compareTo(today) > 0) {

                try {
                    Connection con = Connectdb.getInstance();
                    String sql = "UPDATE chauffeur INNER JOIN voyage ON chauffeur.idchauf = voyage.idchauf SET chauffeur.statut='Indisponible' WHERE voyage.depart < DATE( NOW() ) and voyage.arrive >DATE( NOW() );";
                    //String sql = "update issue_book_details set status = ? where student_id = ? and book_id = ? and status = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    int rowCount = pst.executeUpdate();
                } catch (SQLException e) {
                }
            } else if (arrive.compareTo(today) < 0) {
                try {
                    Connection con = Connectdb.getInstance();
                    String sql = "UPDATE chauffeur INNER JOIN voyage ON chauffeur.idchauf = voyage.idchauf SET chauffeur.statut='Disponible' WHERE  voyage.arrive <DATE( NOW() );";
                    //String sql = "update issue_book_details set status = ? where student_id = ? and book_id = ? and status = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    int rowCount = pst.executeUpdate();
                } catch (SQLException e) {
                }
            } else if (depart.compareTo(today) > 0) {
                try {
                    Connection con = Connectdb.getInstance();
                    String sql = "UPDATE chauffeur INNER JOIN voyage ON chauffeur.idchauf = voyage.idchauf SET chauffeur.statut='Reserver' WHERE  voyage.depart >DATE( NOW() );";
                    //String sql = "update issue_book_details set status = ? where student_id = ? and book_id = ? and status = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.executeUpdate();
                    int rowCount = pst.executeUpdate();
                } catch (SQLException e) {
                }
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame VoyageAjouter;
    private com.raven.swing.Button btn_enregistrer44;
    private com.raven.swing.Button btn_enregistrer45;
    private com.raven.swing.Button btn_imprimer44;
    private com.raven.swing.Button btn_modifier44;
    private com.raven.swing.Button btn_supprimer44;
    private com.raven.swing.Button btn_supprimer45;
    private combo_suggestion.ComboBoxSuggestion jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane6;
    public static rojeru_san.complementos.RSTableMetro tb_voyage;
    private com.toedter.calendar.JDateChooser txt_arrive;
    private combo_suggestion.ComboBoxSuggestion txt_car;
    private combo_suggestion.ComboBoxSuggestion txt_chauf;
    private com.toedter.calendar.JDateChooser txt_depart;
    private combo_suggestion.ComboBoxSuggestion txt_destination1;
    private javax.swing.JLabel txt_marque1;
    private javax.swing.JLabel txt_nb_place;
    private textfield_suggestion.TextFieldSuggestion txt_nomchauf;
    private combo_suggestion.ComboBoxSuggestion txt_source1;
    private javax.swing.JLabel txt_statut;
    // End of variables declaration//GEN-END:variables
}
